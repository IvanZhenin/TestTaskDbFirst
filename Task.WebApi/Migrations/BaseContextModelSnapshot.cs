// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task.DbModule.Data;

#nullable disable

namespace Task.WebApi.Migrations
{
    [DbContext(typeof(BaseContext))]
    partial class BaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Task.DbModule.Models.ItRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItRoles");
                });

            modelBuilder.Entity("Task.DbModule.Models.Password", b =>
                {
                    b.Property<string>("UserLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserLogin");

                    b.ToTable("Passwords");
                });

            modelBuilder.Entity("Task.DbModule.Models.RequestRight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RequestRights");
                });

            modelBuilder.Entity("Task.DbModule.Models.User", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLead")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Task.DbModule.Models.UserItRole", b =>
                {
                    b.Property<long>("ItRoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserLogin")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ItRoleId", "UserLogin");

                    b.HasIndex("UserLogin");

                    b.ToTable("UserItRoles");
                });

            modelBuilder.Entity("Task.DbModule.Models.UserRequestRight", b =>
                {
                    b.Property<string>("UserLogin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("RequestRightId")
                        .HasColumnType("bigint");

                    b.HasKey("UserLogin", "RequestRightId");

                    b.HasIndex("RequestRightId");

                    b.ToTable("UserRequestRights");
                });

            modelBuilder.Entity("Task.DbModule.Models.Password", b =>
                {
                    b.HasOne("Task.DbModule.Models.User", "User")
                        .WithOne("Password")
                        .HasForeignKey("Task.DbModule.Models.Password", "UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Task.DbModule.Models.UserItRole", b =>
                {
                    b.HasOne("Task.DbModule.Models.ItRole", "ItRole")
                        .WithMany("UserItRoles")
                        .HasForeignKey("ItRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task.DbModule.Models.User", "User")
                        .WithMany("UserItRoles")
                        .HasForeignKey("UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItRole");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Task.DbModule.Models.UserRequestRight", b =>
                {
                    b.HasOne("Task.DbModule.Models.RequestRight", "RequestRight")
                        .WithMany("UserRequestRights")
                        .HasForeignKey("RequestRightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task.DbModule.Models.User", "User")
                        .WithMany("UserRequestRights")
                        .HasForeignKey("UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestRight");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Task.DbModule.Models.ItRole", b =>
                {
                    b.Navigation("UserItRoles");
                });

            modelBuilder.Entity("Task.DbModule.Models.RequestRight", b =>
                {
                    b.Navigation("UserRequestRights");
                });

            modelBuilder.Entity("Task.DbModule.Models.User", b =>
                {
                    b.Navigation("Password");

                    b.Navigation("UserItRoles");

                    b.Navigation("UserRequestRights");
                });
#pragma warning restore 612, 618
        }
    }
}
